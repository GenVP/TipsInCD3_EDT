#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.ВариантЗагрузкиДвижений = 1;
	Если Параметры.Свойство("парКонфигурация") И ЗначениеЗаполнено(Параметры.парКонфигурация) Тогда
		Объект.Конфигурация = Параметры.ПарКонфигурация;
		СпособЗагрузки = 1;
		Если Параметры.Свойство("ИсточникДанных") Тогда
			Объект.ИсточникДанных = Параметры.ИсточникДанных;
		КонецЕсли;
		Если Параметры.Свойство("КаталогЗагрузки") Тогда
			Объект.ИмяКаталогаЗагрузки = Параметры.КаталогЗагрузки;
		КонецЕсли;
		Если Параметры.Свойство("ВариантЗагрузкиДвижений") Тогда
			Объект.ВариантЗагрузкиДвижений = Параметры.ВариантЗагрузкиДвижений;
		КонецЕсли;

		Если Параметры.Свойство("ЕстьРасширения") Тогда
			Объект.ЕстьРасширения = Параметры.ЕстьРасширения;
			Если Параметры.ЕстьРасширения И Параметры.Свойство("Расширения") Тогда
				Для Каждого ИмяКаталога Из Параметры.Расширения Цикл
					НовСтрока = Объект.Расширения.Добавить();
					НовСтрока.ИмяКаталогаЗагрузки = ИмяКаталога;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//+КД3
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() ИЛИ ОбщегоНазначения.РежимОтладки() Тогда
		КД3_КоличествоПотоков = 1;
		Элементы.КД3_КоличествоПотоков.Доступность = НЕ ОбщегоНазначения.РежимОтладки();
	КонецЕсли;
	Если КД3_Настройки.ИспользоватьКонтекстнуюПодсказку() Тогда
		КД3_ЭтоСервер = ОбщегоНазначения.ИнформационнаяБазаФайловая();
		
		НастройкиКонфигурации = КД3_Метаданные.НастройкиКонфигурации(
			?(СпособЗагрузки = 0, Неопределено, Объект.Конфигурация));
		КД3_МестоХраненияИндексов = НастройкиКонфигурации.МестоХраненияИндексов;
		КД3_КаталогИндексов = НастройкиКонфигурации.КаталогИндексов;
		КД3_ЗагружатьМетодыМодулей = НастройкиКонфигурации.ЗагружатьМетодыМодулей;
		
		КД3_ЗаполнитьМестоХраненияИндексов(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов);
		КД3_ОбновитьНадписьЗагружаемыхМодулей(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов);
	Иначе
		Элементы.КД3_ГруппаКонтекстнаяПодсказка.Видимость = Ложь;
	КонецЕсли;
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.Конфигурация) Тогда
		СпособЗагрузки = 1;
	КонецЕсли;
	
	УстановитьВидимость();
	//+КД3
	КД3_ИзменитьРежимОбработки();
	КД3_УстановитьВидимостьПоМестуХраненияИндексов(ЭтотОбъект);
	//-КД3
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяКаталогаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораКаталога", ЭтотОбъект, Новый Структура("ВыборРасширения", Ложь));
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ЗначениеЗаполнено(Объект.ИмяКаталогаЗагрузки) Тогда
		ДиалогВыбора.Каталог = Объект.ИмяКаталогаЗагрузки;
	КонецЕсли;
	ДиалогВыбора.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура РасширенияИмяКаталогаЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ЗавершениеВыбораКаталога", ЭтотОбъект, Новый Структура("ВыборРасширения", Истина));
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ТекКаталог = Элементы.Расширения.ТекущиеДанные.ИмяКаталогаЗагрузки;
	Если ЗначениеЗаполнено(ТекКаталог) Тогда
		ДиалогВыбора.Каталог = ТекКаталог;
	КонецЕсли;
	ДиалогВыбора.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура СпособЗагрузкиПриИзменении(Элемент)
	Если СпособЗагрузки = 0 Тогда
		Объект.ТолькоДобавлятьНовые = Ложь;
		Объект.ТолькоОбновитьПланыОбмена = Ложь;
	КонецЕсли;
	УстановитьВидимость();
	//+КД3
	КД3_ПриИзмененииКонфигурации();
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура ЕстьРасширенияПриИзменении(Элемент)
	УстановитьВидимость();
	 
КонецПроцедуры

&НаКлиенте
Процедура КД3_НаКлиенте(Команда)
	
	Если КД3_ЭтоСервер Тогда
		КД3_ЭтоСервер = Ложь;
		КД3_ИзменитьРежимОбработки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КД3_НаСервере(Команда)
	
	Если НЕ КД3_ЭтоСервер Тогда
		КД3_ЭтоСервер = Истина;
		КД3_ИзменитьРежимОбработки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КД3_ИзменитьРежимОбработки()
	
	КоманднаяПанель.ПодчиненныеЭлементы.КД3_РежимРаботы.ПодчиненныеЭлементы.ФормаНаКлиенте.Пометка = НЕ КД3_ЭтоСервер;
	КоманднаяПанель.ПодчиненныеЭлементы.КД3_РежимРаботы.ПодчиненныеЭлементы.ФормаНаСервере.Пометка = КД3_ЭтоСервер;
	
	КоманднаяПанель.ПодчиненныеЭлементы.КД3_РежимРаботы.Заголовок = 
	?(КД3_ЭтоСервер, НСтр("ru = 'Режим работы (на сервере)'"), НСтр("ru = 'Режим работы (на клиенте)'"));
	
	Если Элементы.КД3_КоличествоПотоков.Доступность Тогда
		КД3_КоличествоПотоков = ?(КД3_ЭтоСервер, КД3_НастройкиКлиент.ЗначениеИзКэша("КоличествоПотоков"), 1);
	КонецЕсли;
	Элементы.КД3_КоличествоПотоков.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КД3_КаталогИндексовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("КД3_КаталогИндексовЗавершениеВыбора", ЭтотОбъект);
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ЗначениеЗаполнено(Объект.ИмяКаталогаЗагрузки) Тогда
		ДиалогВыбора.Каталог = Объект.ИмяКаталогаЗагрузки;
	КонецЕсли;
	ДиалогВыбора.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КД3_КаталогИндексовЗавершениеВыбора(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КД3_КаталогИндексов = Результат[0];
КонецПроцедуры

&НаКлиенте
Процедура КД3_ЗагружатьМетодыМодулейПриИзменении(Элемент)
	КД3_ОбновитьНадписьЗагружаемыхМодулей(ЭтотОбъект, КД3_СохранитьКаталогДляКонфигурации);
КонецПроцедуры

&НаКлиенте
Процедура КД3_КонфигурацияПриИзменении(Элемент)
	КД3_ПриИзмененииКонфигурации();
КонецПроцедуры

&НаКлиенте
Процедура КД3_МестоХранениеИндексовПриИзменении(Элемент)
	КД3_УстановитьВидимостьПоМестуХраненияИндексов(ЭтотОбъект);
	Если КД3_МестоХраненияИндексов = 0 Тогда
		КД3_ЗагружатьМетодыМодулей = Ложь;
		КД3_СохранитьКаталогДляКонфигурации = Ложь;
		НастройкиКонфигурации = КД3_МетаданныеКлиент.НастройкиКонфигурации(
			?(СпособЗагрузки = 0, Неопределено, Объект.Конфигурация));
		КД3_ЗаполнитьМестоХраненияИндексов(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов);
		КД3_ОбновитьНадписьЗагружаемыхМодулей(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов ИЛИ КД3_СохранитьКаталогДляКонфигурации);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КД3_КаталогИндексовОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФайловаяСистемаКлиент.ОткрытьПроводник(КД3_КаталогИндексов);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗагрузку(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.ИмяКаталогаЗагрузки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбран каталог со структурой конфигурации'"));
		Возврат;
	КонецЕсли;
	Если СпособЗагрузки = 1 И НЕ ЗначениеЗаполнено(Объект.Конфигурация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбрана конфигурация для загрузки'"));
		Возврат;
	КонецЕсли;
	ИзменитьДоступностьЭлементовФормы(Ложь);
	//+КД3
	КД3_ПрогрессПроцент = 0;
	КД3_ПрогрессТекст = "";
	ПодключитьОбработчикОжидания("ПодготовитьФайлыДляСервераНачало", 0.1, Истина);
	//-КД3
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура КД3_ОбновитьНадписьЗагружаемыхМодулей(Форма, ЗагружатьИзФайлов)
	ЭлементНадпись = Форма.Элементы.КД3_ИнфоЗагружаемыеМодули;
	ЭлементНадпись.Видимость = Форма.КД3_ЗагружатьМетодыМодулей;
	Если ЗагружатьИзФайлов Тогда
		ЭлементНадпись.Заголовок =
			"Для конфигурации указан каталог исходных кодов.
			|Будут загружены только процедуры/функции глобального контекста.";
	Иначе
		ЭлементНадпись.Заголовок =
			"Для конфигурации не указан каталог исходных кодов.
			|Будут загружены процедуры/функции всех модулей.";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьФайлыДляСервераНачало()
	//+КД3
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("ИсточникДанных", Объект.ИсточникДанных);
	ПараметрыЗагрузки.Вставить("КаталогЗагрузки", Объект.ИмяКаталогаЗагрузки);
	ПараметрыЗагрузки.Вставить("ТолькоОбновитьПланыОбмена", Объект.ТолькоОбновитьПланыОбмена);
	ПараметрыЗагрузки.Вставить("КД3_ЗагружатьМетодыМодулей", КД3_ЗагружатьМетодыМодулей);
	ПараметрыЗагрузки.Вставить("КД3_ИспользоватьКонтекстнуюПодсказку", КД3_НастройкиКлиент.ИспользоватьКонтекстнуюПодсказку());
	ПараметрыЗагрузки.Вставить("КД3_ЭтоСервер", КД3_ЭтоСервер);
	ПараметрыЗагрузки.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	
	ПараметрыЗагрузки.Вставить("КаталогиРасширений", Новый Массив);
	Для Каждого СтрокаРасширения Из Объект.Расширения Цикл
		ПараметрыЗагрузки.КаталогиРасширений.Добавить(СтрокаРасширения.ИмяКаталогаЗагрузки);
	КонецЦикла;
	ПараметрыЗагрузки.Вставить("ЕстьРасширения", ПараметрыЗагрузки.КаталогиРасширений.Количество() > 0);
	
	КД3_ЗагрузкаМетаданныхКлиентСервер.ПодготовитьФайлыДляЗагрузки(ПараметрыЗагрузки);
	
	Если КД3_ЭтоСервер Тогда
		НачалоЗагрузкиКонфигурации(ПараметрыЗагрузки);
	Иначе
		ПоместитьПорциюФайловНаСервер(ПараметрыЗагрузки);
	КонецЕсли;
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьПорциюФайловНаСервер(ПараметрыЗагрузки)
	//+КД3
	МассивФайлов = Новый Массив;
	Для Каждого КлючИЗначение Из ПараметрыЗагрузки.ПомещаемыеФайлы Цикл
		МассивФайлов = КлючИЗначение.Значение.Файлы;
		ПараметрыЗагрузки.Вставить("ЭтоРасширение", КлючИЗначение.Значение.ЭтоРасширение);
		ПараметрыЗагрузки.ПомещаемыеФайлы.Удалить(КлючИЗначение.Ключ);
		Прервать;
	КонецЦикла;
	Если МассивФайлов.Количество() = 0 Тогда
		ПараметрыЗагрузки.Удалить("ПомещаемыеФайлы");
		НачалоЗагрузкиКонфигурации(ПараметрыЗагрузки);
	Иначе
		КД3_ПрогрессПроцент = 0;
		КД3_ПрогрессТекст = "Получение файлов для загрузки: " + Символы.ПС + КлючИЗначение.Ключ;
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПодготовитьФайлыДляСервераОкончание", ЭтотОбъект, ПараметрыЗагрузки);
		ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОбработчикОжиданияПомещенияФайлов", ЭтотОбъект, ПараметрыЗагрузки);
		НачатьПомещениеФайловНаСервер(ОповещениеОЗавершении, ОповещениеОПрогрессеВыполнения, , МассивФайлов, УникальныйИдентификатор);
	КонецЕсли;
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПомещенияФайлов(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ПомещеноВсего, ОтказОтПомещенияВсехФайлов, ДополнительныеПараметры) Экспорт
	КД3_ПрогрессПроцент = ПомещеноВсего;
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьФайлыДляСервераОкончание(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	//+КД3
	Если ПомещенныеФайлы = Неопределено Тогда
		// Помещение файлов было прервано
		Результат = Новый Структура("Статус", "Отменено");
		ОкончаниеЗагрузкиКонфигурации(Результат, ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	МассивФайлов = ДополнительныеПараметры.ПомещенныеФайлы;
	Для Каждого ОписаниеФайла Из ПомещенныеФайлы Цикл
		МассивФайлов.Добавить(Новый Структура("ПолноеИмя, Хранение, ЭтоРасширение", ОписаниеФайла.СсылкаНаФайл.Файл.ПолноеИМя, ОписаниеФайла.Адрес, ДополнительныеПараметры.ЭтоРасширение));
	КонецЦикла;
	
	ПоместитьПорциюФайловНаСервер(ДополнительныеПараметры);
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияДлительнойОперации(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	//+КД3
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДлительнаяОперация.Сообщения <> Неопределено Тогда
		Для Каждого Сообщение Из ДлительнаяОперация.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	ДанныеПрогресса = ДлительнаяОперация.Прогресс;
	Если ДанныеПрогресса <> Неопределено Тогда
		КД3_ПрогрессПроцент = ДанныеПрогресса.Процент;
		КД3_ПрогрессТекст = ДанныеПрогресса.Текст;
	КонецЕсли;
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура НачалоЗагрузкиКонфигурации(ПараметрыЗагрузки)
	//+КД3
	КД3_ПрогрессПроцент = 0;
	КД3_ПрогрессТекст = "Чтение данных конфигурации";
	
	Результат = НачатьЗагрузкуСервер(ПараметрыЗагрузки);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 5;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения("ОбработчикОжиданияДлительнойОперации", ЭтотОбъект);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОкончаниеЗагрузкиКонфигурации", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат, ОповещениеОЗавершении, ПараметрыОжидания);
	//+КД3
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеЗагрузкиКонфигурации(Результат, ДополнительныеПараметры) Экспорт
	//+КД3
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'При загрузке структуры конфигурации произошла ошибка'")
			+ Символы.ПС + Результат.КраткоеПредставлениеОшибки);
	ИначеЕсли ПолучитьИзВременногоХранилища(Результат.АдресРезультата) = Истина Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Загрузка структуры конфигурации выполнена успешно'"));
			// При успешной загрузке необходимо очистить локальный кэш конфигурации
			Если СпособЗагрузки = 1 И ЗначениеЗаполнено(Объект.Конфигурация) Тогда
				КД3_МетаданныеКлиент.СброситьОписаниеМетаданныхВКэше(Объект.Конфигурация);
				КД3_МетаданныеКлиент.СброситьНастройкиКонфигурацииВКэше(Объект.Конфигурация);
			КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Загрузка структуры конфигурации не выполнена'"));
	КонецЕсли;
	ИзменитьДоступностьЭлементовФормы(Истина);
	//-КД3
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьЭлементовФормы(ФлагДоступность)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ?(ФлагДоступность, Элементы.Основная, Элементы.Ожидание);
	Элементы.ФормаВыполнитьЗагрузку.Доступность = ФлагДоступность;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	ЗагружатьВКонфигурацию = (СпособЗагрузки = 1);
	Элементы.Конфигурация.Видимость = ЗагружатьВКонфигурацию;
	Элементы.ТолькоДобавлятьНовые.Видимость = ЗагружатьВКонфигурацию;
	Элементы.Расширения.Видимость = Объект.ЕстьРасширения;
	Элементы.ТолькоОбновитьПланыОбмена.Видимость = ЗагружатьВКонфигурацию;
КонецПроцедуры

&НаСервере
Функция НачатьЗагрузкуСервер(СтруктураПараметров)
	//+КД3
	ПараметрыЗагрузки = Новый Структура;
	Для Каждого КлючИЗначение Из СтруктураПараметров Цикл
		ПараметрыЗагрузки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	Если НЕ КД3_ЭтоСервер Тогда
		// Преобразование помещенных файлов
		Для Каждого ПомФайл Из ПараметрыЗагрузки.ПомещенныеФайлы Цикл
			ИмяФайлаСведений = ПолучитьИмяВременногоФайла("xml");
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(ПомФайл.Хранение);
			ДвоичныеДанные.Записать(ИмяФайлаСведений);
			
			УдалитьИзВременногоХранилища(ПомФайл.Хранение);
			ПомФайл.Хранение = ИмяФайлаСведений;
		КонецЦикла;
	КонецЕсли;
	ПараметрыЗагрузки.Вставить("СпособЗагрузки", СпособЗагрузки);
	ПараметрыЗагрузки.Вставить("Конфигурация", Объект.Конфигурация);
	ПараметрыЗагрузки.Вставить("ВариантЗагрузкиДвижений", Объект.ВариантЗагрузкиДвижений);
	ПараметрыЗагрузки.Вставить("ТолькоДобавлятьНовые", Объект.ТолькоДобавлятьНовые);
	ПараметрыЗагрузки.Вставить("КД3_МестоХраненияИндексов", КД3_МестоХраненияИндексов);
	ПараметрыЗагрузки.Вставить("КД3_КаталогИндексов", КД3_КаталогИндексов);
	ПараметрыЗагрузки.Вставить("КД3_СохранитьКаталогДляКонфигурации", КД3_СохранитьКаталогДляКонфигурации);
	ПараметрыЗагрузки.Вставить("КД3_КоличествоПотоков", КД3_КоличествоПотоков);
	
	КД3_ЗагрузкаМетаданных.НужноСообщатьПрогресс(ПараметрыЗагрузки, НЕ ОбщегоНазначения.РежимОтладки());
	
	ПараметрыФоновогоЗадания = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	ПараметрыФоновогоЗадания.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка структуры метаданных из каталога (КД3)'");
	ПараметрыФоновогоЗадания.ЗапуститьВФоне = Истина;
	ПараметрыФоновогоЗадания.ПрерватьВыполнениеЕслиОшибка = Истина;
	ПараметрыФоновогоЗадания.Вставить("АдресРезультата", ПоместитьВоВременноеХранилище(Ложь, УникальныйИдентификатор));
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыФоновогоЗадания,
		"Обработки.КД3_ЗагрузкаСтруктурыКонфигурацииИзФайловXMLМногопоточно.ВыполнитьЗагрузкуМетаданных", ПараметрыЗагрузки, ПараметрыФоновогоЗадания.АдресРезультата);
	//-КД3
КонецФункции

&НаКлиенте
Процедура ЗавершениеВыбораКаталога(Знач ВыбранныеФайлы, Знач ДопПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Или НЕ ДопПараметры.Свойство("ВыборРасширения") Тогда
		Возврат;
	КонецЕсли;
	Если ДопПараметры.ВыборРасширения Тогда
		НомСтроки = Элементы.Расширения.ТекущиеДанные.НомерСтроки;
		Объект.Расширения[НомСтроки - 1].ИмяКаталогаЗагрузки = ВыбранныеФайлы[0];
	Иначе
		Объект.ИмяКаталогаЗагрузки = ВыбранныеФайлы[0];
	КонецЕсли;
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура КД3_ЗаполнитьМестоХраненияИндексов(Форма, ЗагружатьИзФайлов)
	
	СписокВыбора = Форма.Элементы.КД3_МестоХраненияИндексов.СписокВыбора;
	
	СписокВыбора.Очистить();
	СписокВыбора.Добавить(0, "Не использовать");
	СписокВыбора.Добавить(1, "В каталоге");
	СписокВыбора.Добавить(2, "В информационной базе");
	Если ЗагружатьИзФайлов Тогда
		СписокВыбора.Добавить(3, "Не хранить");
	КонецЕсли;
	
	Если СписокВыбора.НайтиПоЗначению(Форма.КД3_МестоХраненияИндексов) = Неопределено Тогда
		Форма.КД3_МестоХраненияИндексов = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КД3_УказатьКаталогФайловВКонфигурацииПриИзменении(Элемент)
	НастройкиКонфигурации = КД3_МетаданныеКлиент.НастройкиКонфигурации(
		?(СпособЗагрузки = 0, Неопределено, Объект.Конфигурация));
	КД3_ОбновитьНадписьЗагружаемыхМодулей(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов ИЛИ КД3_СохранитьКаталогДляКонфигурации);
	КД3_ЗаполнитьМестоХраненияИндексов(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов ИЛИ КД3_СохранитьКаталогДляКонфигурации);
КонецПроцедуры

&НаКлиенте
Процедура КД3_УстановитьВидимостьПоМестуХраненияИндексов(Форма)
	Форма.Элементы.КД3_КаталогИндексов.Видимость = Форма.КД3_МестоХраненияИндексов = 1;
	Форма.Элементы.КД3_ЗагружатьМетодыМодулей.Доступность = Форма.КД3_МестоХраненияИндексов > 0;
	Форма.Элементы.КД3_СохранитьКаталогДляКонфигурации.Доступность = Форма.КД3_МестоХраненияИндексов > 0;
КонецПроцедуры

&НаКлиенте
Процедура КД3_ПриИзмененииКонфигурации()
	
	НастройкиКонфигурации = КД3_МетаданныеКлиент.НастройкиКонфигурации(
		?(СпособЗагрузки = 0, Неопределено, Объект.Конфигурация));
	КД3_МестоХраненияИндексов = НастройкиКонфигурации.МестоХраненияИндексов;
	КД3_КаталогИндексов = НастройкиКонфигурации.КаталогИндексов;
	КД3_ЗагружатьМетодыМодулей = НастройкиКонфигурации.ЗагружатьМетодыМодулей;
	Если КД3_МестоХраненияИндексов = 0 Тогда
		КД3_ЗагружатьМетодыМодулей = Ложь;
		КД3_СохранитьКаталогДляКонфигурации = Ложь;
	КонецЕсли;
	КД3_ЗаполнитьМестоХраненияИндексов(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов);
	КД3_ОбновитьНадписьЗагружаемыхМодулей(ЭтотОбъект, НастройкиКонфигурации.ЗагружатьИзФайлов ИЛИ КД3_СохранитьКаталогДляКонфигурации);
	
	КД3_УстановитьВидимостьПоМестуХраненияИндексов(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти
